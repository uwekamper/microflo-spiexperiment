{
    "set": { "id": 0, "name": "microflo-core", "description": "Core components" },
    "defaultInPorts": { "in": { "id": 0 } },
    "defaultOutPorts": { "out": { "id": 0 } },
    "components": {
        "Invalid": { "id": 0, ".skip": true },

        "PwmWrite": { "id": 1,
            "description": "Set duty cycle [0-100%] of PWM pin",
            "inPorts": {
                "dutycycle": { "id": 0 },
                "pin": { "id": 1 }
            }
        },
        "AnalogRead": { "id": 2,
            "description": "Read analog value from pin. Value=[0-1023]",
            "inPorts": {
                "trigger": { "id": 0 },
                "pin": { "id": 1 }
            }
        },
        "Forward": { "id": 3,
            "description": "Forward a packet from input to output"
        },
        "Count": { "id": 4,
            "description": "Count upwards from 0, with step 1",
            "inPorts": {
                "in": { "id": 0 },
                "reset": { "id": 1 }
            }
        },
        "DigitalWrite": { "id": 5,
            "description": "Write a boolean value to pin",
            "inPorts": {
                "in": { "id": 0 },
                "pin": { "id": 1 }
            }
        },
        "DigitalRead": { "id": 6,
            "description": "Read a boolean value from pin. Value is read on @trigger",
            "inPorts": {
                "trigger": { "id": 0 },
                "pin": { "id": 1 },
                "pullup": { "id": 2 }
            }
        },
        "Timer": { "id": 7,
            "description": "Emit a packet every @interval milliseconds",
            "inPorts": {
                "interval": { "id": 0 },
                "reset": { "id": 2 }
            }
        },
        "SerialIn": { "id": 8,
            "description": "Emit packets read from serial port (0). Warning: may interfere with MicroFlo UI usage"
        },
        "SerialOut": { "id": 9,
            "description": "Write input packets to serial port (0). Warning: may interfere with MicroFlo UI usage"
        },
        "InvertBoolean": { "id": 10,
            "description": "Invert incoming boolean value. Logical equivalent: NOT"
        },
        "ToggleBoolean": { "id": 11,
            "description": "Invert output packet everytime an input packet arrives. Output defaults to false",
            "inPorts": {
                "in": { "id": 0 },
                "reset": { "id": 1 }
            }
        },
        "HysteresisLatch": { "id": 12,
            "description": "Emit true if @in < @highthreshold, false if @in < @lowthreshold, else keep previous state",
            "inPorts": {
                "in": { "id": 0 },
                "lowthreshold": { "id": 1 },
                "highthreshold": { "id": 2 }
            }
        },
        "ReadDallasTemperature": { "id": 13,
            "description": "Read temperature from DS1820 thermometer. Note: requires building MicroFlo from source tree.",
            "inPorts": {
                "trigger": { "id": 0 },
                "pin": { "id": 1 },
                "address": { "id": 2 }
            }
        },

        "Route": { "id": 14,
            "description": "Pass packets to @out from input port number @port",
            "inPorts": {
                "port": { "id": 0 },
                "in1": { "id": 1 },
                "in2": { "id": 2 },
                "in3": { "id": 3 },
                "in4": { "id": 4 },
                "in5": { "id": 5 },
                "in6": { "id": 6 },
                "in7": { "id": 7 },
                "in8": { "id": 8 },
                "in9": { "id": 9 }
            }
        },

        "Delimit": { "id": 15, ".skip": true },

        "BreakBeforeMake": { "id": 16,
            "description": "Break-before-make switch logic. Monitor ports must be connected to form a feedback loop from what outputs are connected to",
            "inPorts": {
                "in": { "id": 0 },
                "monitor1": { "id": 1 },
                "monitor2": { "id": 2 }
            },
            "outPorts": {
                "out1": { "id": 0 },
                "out2": { "id": 1 }
            }
        },
        "MapLinear": { "id": 17,
            "description": "Map the integer @in from range [@inmin,@inmax] to [@outmin,@outmax]",
            "inPorts": {
                "in": { "id": 0 },
                "inmin": { "id": 1 },
                "inmax": { "id": 2 },
                "outmin": { "id": 3 },
                "outmax": { "id": 4 }
            }
        },
        "MonitorPin": { "id": 18,
            "description": "Emit a boolean value each time a pin changes state. Note: only pin 2/3 on Arduino Uno/Nano supported.",
            "inPorts": {
                "pin": { "id": 0 }
            }
        },
        "Split": { "id": 19,
            "description": "Emit incoming packets on all output ports",
            "outPorts": {
                "out1": { "id": 0 },
                "out2": { "id": 1 },
                "out3": { "id": 2 },
                "out4": { "id": 3 },
                "out5": { "id": 4 },
                "out6": { "id": 5 },
                "out7": { "id": 6 },
                "out8": { "id": 7 },
                "out9": { "id": 8 }
            }
        },
        "Gate": { "id": 20,
            "description": "Pass packets from @in to @out only if @enable is true",
            "inPorts": {
                "in": { "id": 0 },
                "enable": { "id": 1 }
            }
        },

        "BooleanOr": { "id": 21,
            "description": "Emits true if either @a OR @b is true, else false",
            "inPorts": {
                "a": { "id": 0 },
                "b": { "id": 1 }
            }
        },

        "BooleanAnd": { "id": 22,
            "description": "Emits true if @a AND @b is true, else false",
            "inPorts": {
                "a": { "id": 0 },
                "b": { "id": 1 }
            }
        },

        "ReadCapacitivePin": { "id": 23,
            "description": "Emits true if measured capacitance (in iterations) on @pin exceeds @threshold",
            "inPorts": {
                "trigger": { "id": 0 },
                "pin": { "id": 1 },
                "threshold": { "id": 2 }
            }
        },

        "NumberEquals": { "id": 24,
            "description": "Emits true if @a EQUALS @b is true, else false",
            "inPorts": {
                "a": { "id": 0 },
                "b": { "id": 1 }
            }
        },

        "Min": { "id": 25,
            "description": "Emits minimum value of @in and @threshold",
            "inPorts": {
                "in": { "id": 0 },
                "threshold": { "id": 1 }
            }
        },

        "Max": { "id": 26,
            "description": "Emits maximum value of @in and @threshold",
            "inPorts": {
                "in": { "id": 0 },
                "threshold": { "id": 1 }
            }
        },

        "Constrain": { "id": 27,
            "description": "Constraina a number within a the range [@lower,@upper]",
            "inPorts": {
                "in": { "id": 0 },
                "lower": { "id": 1 },
                "upper": { "id": 2 }
            }
        },

        "LedMatrixMax": { "id": 28,
            "description": "Set characters on MAX7219 display",
            "inPorts": {
                "in": { "id": 0 },
                "pincs": { "id": 1 },
                "pindin": { "id": 2 },
                "pinclk": { "id": 3 }
            }
        },

        "LedChainWS": { "id": 29,
            "description": "Display colors on RGB strips/chains using WS2812 controller",
            "inPorts": {
                "in": { "id": 0 },
                "pin": { "id": 1 },
                "pixels": { "id": 2 },
                "show": { "id": 3 }
            }, "outPorts": {
                "ready": { "id": 0 },
                "pixelset": { "id": 1 }
            }
        },

        "PseudoPwmWrite": { "id": 30,
            "description": "Software PWM. Will be jittery and slow, but can be used on any GPIO pin/platform",
            "inPorts": {
                "period": { "id": 0 },
                "ontime": { "id": 1 },
                "dutycycle": { "id": 2 },
                "pin": { "id": 3 }
            }
        },

        "ArduinoUno": { "id": 50,
            "description": "Convenient definition of pins available on Arduino Uno",
            "outPorts": {
                "pin0": { "id": 0 },
                "pin1": { "id": 1 },
                "pin2": { "id": 2 },
                "pin3": { "id": 3 },
                "pin4": { "id": 4 },
                "pin5": { "id": 5 },
                "pin6": { "id": 6 },
                "pin7": { "id": 7 },
                "pin8": { "id": 8 },
                "pin9": { "id": 9 },
                "pin10": { "id": 10 },
                "pin11": { "id": 11 },
                "pin12": { "id": 12 },
                "pin13": { "id": 13 },
                "pina0": { "id": 14 },
                "pina1": { "id": 15 },
                "pina2": { "id": 16 },
                "pina3": { "id": 17 },
                "pina4": { "id": 18 },
                "pina5": { "id": 19 }
            },
            "inPorts": {}
        },



        "ATUSBKEY": { "id": 51,
            "description": "Convenient definition of pins available on Atmel AT90USBKEY",
            "outPorts": {
                "porta0": { "id": 0 },
                "porta1": { "id": 1 },
                "porta2": { "id": 2 },
                "porta3": { "id": 3 },
                "porta4": { "id": 4 },
                "porta5": { "id": 5 },
                "porta6": { "id": 6 },
                "porta7": { "id": 7 },

                "portb0": { "id": 8 },
                "portb1": { "id": 9 },
                "portb2": { "id": 10 },
                "portb3": { "id": 11 },
                "portb4": { "id": 12 },
                "portb5": { "id": 13 },
                "portb6": { "id": 14 },
                "portb7": { "id": 15 },

                "portc0": { "id": 16 },
                "portc1": { "id": 17 },
                "portc2": { "id": 18 },
                "portc3": { "id": 19 },
                "portc4": { "id": 20 },
                "portc5": { "id": 21 },
                "portc6": { "id": 22 },
                "portc7": { "id": 23 },

                "portd0": { "id": 24 },
                "portd1": { "id": 25 },
                "portd2": { "id": 26 },
                "portd3": { "id": 27 },
                "portd4": { "id": 28 },
                "portd5": { "id": 29 },
                "portd6": { "id": 30 },
                "portd7": { "id": 31 },

                "porte0": { "id": 32 },
                "porte1": { "id": 33 },
                "porte2": { "id": 34 },
                "porte3": { "id": 35 },
                "porte4": { "id": 36 },
                "porte5": { "id": 37 },
                "porte6": { "id": 38 },
                "porte7": { "id": 39 },

                "portf0": { "id": 40 },
                "portf1": { "id": 41 },
                "portf2": { "id": 42 },
                "portf3": { "id": 43 },
                "portf4": { "id": 44 },
                "portf5": { "id": 45 },
                "portf6": { "id": 46 },
                "portf7": { "id": 47 }
            },
            "inPorts": {}
        },


        "MbedLPC": { "id": 52,
            "description": "Convenient definition of pins available on Mbed LPC1768",
            "outPorts": {
                "led1": { "id": 0 },
                "led2": { "id": 1 },
                "led3": { "id": 2 },
                "led4": { "id": 3 },
                "pin21": { "id": 4 },
                "pin22": { "id": 5 },
                "pin23": { "id": 6 },
                "pin24": { "id": 7 }
            },
            "inPorts": {}
        },

        "RaspberryPi": { "id": 53,
            "description": "Convenient definition of pins available for GPIO on Raspberry PI (rev2)",
            "outPorts": {
                "pin3": { "id": 1 },
                "pin5": { "id": 2 },
                "pin7": { "id": 3 }
            },
            "inPorts": {}
        },

       "TivaC": { "id": 54,
            "description": "Convenient definition of pins available for GPIO Texas Instruments Tiva-C",
            "outPorts": {
                "pa0": { "id": 0 },
                "pa1": { "id": 1 },
                "pa2": { "id": 2 },
                "pa3": { "id": 3 },
                "pa4": { "id": 4 },
                "pa5": { "id": 5 },
                "pa6": { "id": 6 },
                "pa7": { "id": 7 },

                "pb0": { "id": 8 },
                "pb1": { "id": 9 },
                "pb2": { "id": 10 },
                "pb3": { "id": 11 },
                "pb4": { "id": 12 },
                "pb5": { "id": 13 },
                "pb6": { "id": 14 },
                "pb7": { "id": 15 },

                "pc0": { "id": 16 },
                "pc1": { "id": 17 },
                "pc2": { "id": 18 },
                "pc3": { "id": 19 },
                "pc4": { "id": 20 },
                "pc5": { "id": 21 },
                "pc6": { "id": 22 },
                "pc7": { "id": 23 },

                "pd0": { "id": 24 },
                "pd1": { "id": 25 },
                "pd2": { "id": 26 },
                "pd3": { "id": 27 },
                "pd4": { "id": 28 },
                "pd5": { "id": 29 },
                "pd6": { "id": 30 },
                "pd7": { "id": 31 },

                "pe0": { "id": 32 },
                "pe1": { "id": 33 },
                "pe2": { "id": 34 },
                "pe3": { "id": 35 },
                "pe4": { "id": 36 },
                "pe5": { "id": 37 },
                "pe6": { "id": 38 },
                "pe7": { "id": 39 },

                "pf0": { "id": 40 },
                "pf1": { "id": 41 },
                "pf2": { "id": 42 },
                "pf3": { "id": 43 },
                "pf4": { "id": 44 },
                "pf5": { "id": 45 },
                "pf6": { "id": 46 },
                "pf7": { "id": 47 }
            },
            "inPorts": {}
        },

		"SPIWrite": { "id": 55,
			"description": "Writes 9 bytes to the SSI0",
			"inPorts": {
				"in": { "id": 0 }
			},
			"outPorts": {}
		},

        "SubGraph": { "id": 100,
            "description": "Not for normal use. Used internally for handling subgraphs",
            "inPorts": {},
            "outPorts": {}
        },

        "_Max": { "id": 255, ".skip": true }
    }
}
